pipeline {
    agent any

    stages {
        stage('Code Fetch') {
            steps {
                echo 'Downloading code'
                git credentialsId: 'githubCredential2', url: 'https://github.com/rajeshp808/jenkins1.git', branch: 'main'
                echo "Code downloaded"
            }
        }
        stage('SonarQube Scanner') {
            steps {
                withSonarQubeEnv('SonarQube') {
                   // sh "./gradlew sonarqube"
                 echo "executing sonar scanner "
                 bat 'sonar_scan.bat'
                }
            }
        }
        
        stage("SonarQube Quality Gate Validation"){
        steps {
              timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
                script {
                    def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
                
                    if (qg.status != 'OK') {
                      error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    } else {
                         echo 'SonarQube Quality check passed successfully'
                    }
                }
              }
            }
        }
        
         stage('Build War') {
            steps {
                echo 'building source code'
                withAnt {
                    bat 'ant buildWar'
                }
            }
        }
        
        stage('Deploy War') {
            steps {
                deploy adapters: [tomcat8(credentialsId: '7d7278d3-174a-4a9d-8f36-2f56e46b9e4e', path: '', url: 'http://localhost:8182')], contextPath: 'jenkins1', war: '**/*.war'
            }
        }
        
        
    }
}
